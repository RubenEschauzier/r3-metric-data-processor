{"version":3,"file":"process.js","sourceRoot":"","sources":["process.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA6B;AAC7B,sDAAmD;AACnD,8CAA2C;AAC3C,kEAAyE;AACzE,uCAAyB;AAEzB,MAAM,QAAQ,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAChF,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;AAEtC,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAE,YAAY,CAAC,CAAC;AACjG,MAAM,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;AACvG,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC;AAE7E,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAC,aAAa,CAAC,CAAC;AAC7C,MAAM,QAAQ,GAAG,IAAI,iDAA4B,CAAC,aAAa,CAAC,CAAC;AACjE,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IACpB,iDAA4B,CAAC,WAAW,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAA;IACjE,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;QACpB,mBAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAGH,EAAE,CAAC,aAAa,CACZ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,EAC7C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,CACjE,CAAC","sourcesContent":["import * as path from 'path';\nimport { DataIngestor } from '../src/DataIngestor';\nimport { R3Metric } from '../src/R3Metric';\nimport { DiefficiencyMetricExperiment } from '../src/DiefficiencyMetric';\nimport * as fs from 'fs';\n\nconst ingestor = new DataIngestor(path.join(__dirname, \"..\", \"data\", \"output\"));\nconst processedData = ingestor.read();\n\nconst r3MetricOutputDir = path.join(__dirname, \"..\", \"data\", \"calculated-metrics\", \"r3-metrics\");\nconst dieffMetricOutputDir = path.join(__dirname, \"..\", \"data\", \"calculated-metrics\", \"dieff-metrics\");\nconst oracelOutputDir = path.join(__dirname, \"..\", \"data\", \"processed-data\");\n\nconst r3Metric = new R3Metric(processedData);\nconst diMetric = new DiefficiencyMetricExperiment(processedData);\ndiMetric.run().then(x => {\n    DiefficiencyMetricExperiment.writeToFile(x, dieffMetricOutputDir)\n    r3Metric.run().then(x => {\n        R3Metric.writeToFile(x, r3MetricOutputDir);\n    });    \n});\n\n\nfs.writeFileSync(\n    path.join(oracelOutputDir, 'oracleData.json'), \n    JSON.stringify(processedData['combination_0'].oracleRccValues)\n);\n\n"]}